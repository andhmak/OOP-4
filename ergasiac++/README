Δημάκης Αντώνιος sdi1900047

Εντολή μεταγλώττισης:;
g++ -o rpg rpgbase.cpp rpggame.cpp main.cpp

Εντολή εκτέλεσης:
./rpg

Σχεδιαστικές επιλογές:
Έχουν μοντελοποιηθεί οι εξής 24 έννοιες μέσω κλάσεων (όνομα αντιστοίχων κλάσεων σε παρένθεση):
Αντικείμενο (Item), όπως αυτό περιγράφεται στην εκφώνηση, με τις εξής υποκλάσεις:
    Όπλο (Weapon), όπως αυτό περιγράφεται στην εκφώνηση.
    Πανοπλία (Armor), όπως αυτή περιγράφεται στην εκφώνηση.
    Φίλτρο (Potion), όπως αυτό περιγράφεται στην εκφώνηση, με τις εξής υποκλάσεις:
        Φίλτρο δύναμης (StrengthPotion), φίλτρο που επηρεάζει το στατιστικό της δύναμης.
        Φίλτρο επιδεξιότητας (DexterityPotion), φίλτρο που επηρεάζει το στατιστικό της επιδεξιότητας.
        Φίλτρο ευκινησίας (AgilityPotion), φίλτρο που επηρεάζει το στατιστικό της ευκινησίας.
    Ξόρκι (Spell), όπως αυτό περιγράφεται στην εκφώνηση, με τις εξής υποκλάσεις:
        Ξόρκι πάγου (IceSpell), όπως αυτό περιγράφεται στην εκφώνηση.
        Ξόρκι φωτιάς (FireSpell), όπως αυτό περιγράφεται στην εκφώνηση.
        Ξόρκι ηλεκτρισμού (LightingSpell), όπως αυτό περιγράφεται στην εκφώνηση.
Ζωντανό ον (Living), όπως αυτό περιγράφεται στην εκφώνηση, με τις εξής υποκλάσεις:
    Ήρωας (Hero), όπως αυτός περιγράφεται στην εκφώνηση, με τις εξής υποκλάσεις:
        Μαχητής (Warrior), όπως αυτός περιγράφεται στην εκφώνηση.
        Μάγος (Sorcerer), όπως αυτός περιγράφεται στην εκφώνηση.
        Ιππότης (Paladin), όπως αυτός περιγράφεται στην εκφώνηση.
    Τέρας (Monster), όπως αυτό περιγράφεται στην εκφώνηση.
        Δράκος (Dragon), όπως αυτός περιγράφεται στην εκφώνηση.
        Ον με εξωσκελετός (Exoskeleton), όπως αυτός περιγράφεται στην εκφώνηση.
        Πνεύμα (Spirit), όπως αυτό περιγράφεται στην εκφώνηση.
Status effect (StatusEffect), μια προσωρινή μεταβολή στα στατιστικά ενός τέρατος, συγκεκριμένου μεγέθους και διάρκειας σε γύρους.
Ομάδα ηρώων (Party), ένα σύνολο ηρώων που κατέχουν κάποια αντικείμενα, και μπορούν να εκτελέσουν πράξεις όπως το να εμπλακούν σε μάχη.
Αγορά (Market), που περιέχει ένα σύνολο αντικειμένων διαθέσιμο προς πώληση σε ένα Party, και όπου ένα Party μπορεί να πουλήσει αντικείμενα.
Πλέγμα (Grid), ο κόσμος του παιχνιδιού όπου υπάρχει και κινείται η ομάδα των ηρώων. Περιέχει τον πίνακα των τετραγώνων καθώς και ένα Party (party)
και μία Market (gameMarket).

Το Spell όπως το Item έχει και αυτό όνομα, τιμή και ελάχιστο επίπεδο όπως όλα τα αντικείμενα, και αγοραπωλείται και αποθηκεύεται όπως όλα τα
αντικείμενα. Επομένως στο μοντέλο του παιχνιδιού το ξόρκι είναι και αυτό ένα αντικείμενο. "Μεταφράζοντας" αυτήν την ιδιότητα στον αντικειμενοστραφή
και ορίζοντάς το ως υποκλάση, παρόλο που αυτό δεν αναφέρεται ρητά στην εκφώνηση, επιτυγχάνεται απλοποίηση του κώδικα μέσω της χρήσης του πολυμορφισμού.

Εκτός από healthPower, κάθε Living έχει και μια μεταβλητή-μέλος maxHealthPower, και δεν μπορεί να ανακτήσει healthPower που να την ξεπερνά.
Ομοίως υπάρχει maxMagicPower για την magicPower του Hero.

Η ζημιά που προκαλεί ένας ήρωας σε μια επίθεση προκύπτει από το άθροισμα της δύναμής του και αυτής του όπλου του. Αν δεν έχει όπλο τότε είναι απλά η
δύναμή του.

Δεν εξηγείται ποια είναι η πρακτική σημασία του να χρησιμοποιείται ένα weapon με δύο χέρια, άρα σε αυτήν την υλοποίηση σημαίνει πως
σε μια επίθεση ο hero που το χρησιμοποιεί μπορεί να διπλασιάσει την ζημία που αυτό προκαλεί (εφόσον μπορεί να "χτυπήσει" χρησιμοποιώντας
την δύναμη και των δύο χεριών).

Η αλλαγή που προκαλεί ένα φίλτρο στα στατιστικά ενός ήρωα είναι μόνιμη, παρόλο που δεν δουλεύουν συνήθως έτσι τα φίλτρα στα παιχνίδια. Αυτό όμως έβγαζε
το περισσότερο νόημα αφού μπορεί ένας ήρωας να τα χρησιμοποιήσει και εκτός μάχης.

Κατά την μάχη ο παίκτης μπορεί να επιλέξει μόνο μία πράξη (attack, castSpell, use, equip) ανά ήρωα.

Σε ένα Monster αν του μειωθεί η defense από κάποιο StatusEffect που προκαλείται από FireSpell, μπορεί να γίνει αρνητικός αριθμός. Αυτό σημαίνει
πως η απόλυτη τιμή της προστίθεται στην δύναμη του αντιπάλου όταν δέχεται ζημία από επίθεση. Θεωρώ πως αυτό βγάζει νόημα κρίνοντας από το πώς
αντιμετωπίζονται γενικά τέτοιες περιπτώσεις σε παιχνίδια RPG. Αντίθετα, μια επίθεση δεν θα προκαλέσει ποτέ αρνητική ζημία (αύξηση της healthPower),
ακόμα και αν η δύναμη της επίθεσης είναι μικρότερη από την άμυνα του αντιπάλου, ή και αρνητική λόγω StatusEffect που προκλήθηκε από IceSpell.

Οι ήρωες (party) έχουν κοινό inventory/σύνολο αντικειμένων που κατέχουν. Επομένως αν και ο καθένας έχει τα δικά του χρήματα, στην πράξη τα μοιράζονται.
Κατά την αγορά αντικειμένων δίνουν με την σειρά τους χρήματα οι ήρωες μέχρι να ολοκληρωθεί το ποσό, και κατά την πώληση τα χρήματα τα παίρνει ο πρώτος
ήρωας.

Στον κόσμο του παιχνιδιού υπάρχει μία αγορά, με άπειρο απόθεμα. Έχει ένα σύνολο αντικειμένων από τα οποία μπορεί να αγοράσει το party όσα θέλει.
Στο Grid απλά φαίνεται σε ποια "τετράγωνα" μπορεί η ομάδα να έχει πρόσβαση στην αγορά.

Εν μέρει λόγω του προηγούμενου, τα τετράγωνα στο Grid περιέχουν απλά ενδείξεις στον τύπο του τετραγώνου, όχι αντικείμενα υποκλάσεων κάποιας κλάσης
"τετράγωνο". Το Grid πρέπει απλά να μπορεί να δει μετά από κάθε εντολή κίνησης αν το νέο τετράγωνο είναι nonAccesible, ώστε να απαγορεύσει την κίνηση,
και αν είναι common, ώστε να προκαλέσει με μια πιθανότητα μάχη. Επίσης πρέπει να μπορεί να δει ανά πάσα χρονική στιγμή αν το τετράγωνο είναι market
για να δώσει πρόσβαση στην αγορά όταν του ζητηθεί. Επομένως, στο συγκεκριμένο παιχνίδι δεν αποθηκεύεται κάποια πληροφορία σε κάθε τετράγωνο εκτός από
το είδος του, άρα θεώρησα την υλοποίηση με enum πιο κατάλληλη στην συγκεκριμένη περίπτωση.

Χρησιμοποιήθηκαν "απλές" δομές (πίνακες, vectors, λίστες), εφόσον δεν χρειάζεται σε κάποιο σημείο του προγράμματος ταξινόμηση ή αναζήτηση.

Για τα τετράγωνα του Grid, τους ήρωες του Party και τα αντικείμενα του Market χρησιμοποιήθηκαν απλοί πίνακες αντικειμένων, εφόσον το πλήθος των
στοιχείων τους είναι γνωστό κατά την δημιουργία της κλάσης και δεν αλλάζει μετά.

Για τα αντικείμενα του Party χρησιμοποιήθηκαν vectors εφόσον η ομάδα τα αγοράζει/πουλάει/χρησιμοποιεί, άρα αλλάζει ο αριθμός τους. Η πολυπλοκότητα
Ο(1) της λίστας για αφαίρεση στοιχείου δεν θα βελτίωνε την γενική πολυπλοκότητα της αφαίρεσης αντικειμένου κατά την χρήση/πώληση, καθώς ούτως ή άλλως
για κάθε μία διαδικασία αφαίρεσης τυπώνεται όλο το πλήθος της κατάλληλης κατηγορίας διαθέσιμων αντικειμένων για να διαλέξει ο παίκτης. Δεν χρειάζεται
όμως να διασχισθεί ξανά όλη η δομή στην περίπτωση που δεν θα αφαιρεθεί το αντικείμενο εφόσον υπάρχει άμεση πρόσβαση.

Για τα StatusEffect σε ένα Monster χρησιμοποιήθηκαν λίστες. Στο τέλος κάθε γύρου γίνεται διάσχιση όλων των StatusEffect ενός Monster και αφαιρείται 
από το καθένα 1 γύρος διάρκεια, μέχρι να φτάσει στο 0 και το StatusEffect να σβησθεί. Εφόσον σε κάθε διάσχιση μπορούν πολλά, έως και όλα, να αφαιρεθούν,
άρα το Ο(1) της λίστας στην αφαίρεση βοηθάει. Δεν χρειάζεται επίσης ποτέ να προσπελασθεί κάποιο συγκεκριμένο StatusEffect και όχι όλα, ώστε να βοηθάει
η άμεση πρόσβαση που παρέχει το vector.

Στο names.h βρίσκονται τα ονόματα των ζωντανών, που διαλέγονται τυχαία, και των αντικειμένων, που διαλέγονται με την σειρά (από την αρχή αν
αλλάξουν οι παράμετροι και τελειώσουν τα ονόματα λόγω πολλών αντικειμένων).

Το party ξεκινά στο κάτω-αριστερά τετράγωνο του Grid, το οποίο είναι πάντα common.

Οι κλάσεις που αντιπροσωπεύουν απλές οντότητες του κόσμου, και των οποίων όλες οι συναρτήσεις δεν περιμένουν είσοδο από τον χρήστη ("αυτόματες")
βρίσκονται στα αρχεία rpgbase.h/rpgbase.cpp. Αυτές που συνδυάζουν τις πιο απλές οντότητες και δημιουργούν ένα παιχνίδι (οι Party, Market, Grid),
έχοντας συναρτήσεις που απαιτούν είσοδο από τον χρήστη ("διαδραστικές") βρίσκονται στα αρχεία rpggame.h/rpggame.cpp.
Η χρήση του μοντέλου γίνεται στο main.cpp.

Η main.cpp κάνει include την rpggame.h και η rpggame.h την rpgbase.h. Ούτως η άλλως το interface του μοντέλου αρκεί αν είναι το rpggame.h, εφόσον
ο "εξωτερικός κόσμος" δεν χρειάζεται να χρησιμοποιήσει κάτι άλλο εκτός από το Grid. Οι πρότυπες βιβλιοθήκες γίνονται include σε όποια αρχεία
χρειάζονται, εφόσον ούτως ή άλλως περιέχουν include guards.

Διαδικασία:
Η main λαμβάνει από την είσοδο πληροφορίες για τις διαστάσεις του πλέγματος, του πλήθους των ηρώων και τύπου τους, και κατόπιν αρχικοποιεί το Grid με
αυτά τα στοιχεία (η gameMarket αρχικοποιείται από τον constructor του Grid πάντα με 15 αντικείμενα του κάθε είδους). Έπειτα καλεί την playGame της Grid,
από όπου ξεκινάει το παιχνίδι, περιμένοντας την είσοδο του χρήστη. Αυτός μπορεί να επιλέξει να:
    - Λήξει το παιχνίδι, δίνοντας στην είσοδο την συμβολοσειρά "quitGame", οπότε επιστρέφει η συνάρτηση.
    - Δει τις πληροφορίες των ηρώων του party, δίνοντας στην είσοδο την συμβολοσειρά "displayHeroStats", οπότε καλείται η ομώνυμη συνάρτηση της party.
    - Δει τα αντικείμενα που διαθέτει, δίνοντας στην είσοδο την συμβολοσειρά "checkInventory", οπότε καλείται η ομώνυμη συνάρτηση της party.
    - Αλλάξει όπλα οι πανοπλίες στους ήρωες του party, δίνοντας στην είσοδο την συμβολοσειρά "equip", οπότε καλείται η ομώνυμη συνάρτηση της party.
      Σε αυτήν ανοίγει μενού όπου μπορεί να:
          - Επιλέξει ποιος ήρωας θα αλλάξει, δίνοντας το index του (1 - heroNum), και μετά να επιλέξει αν θα αλλάξει όπλο ή πανοπλία, δίνοντας "weapon"
            ή "armor" αντίστοιχα. Μετά θα επιλέξει από ένα μενού των διαθεσίμων όπλων/πανοπλιών δίνοντας το κατάλληλο index, και η αλλαγή θα γίνει αν
            είναι αυτό δυνατόν (αν έχει ο ήρωας αρκετά ψηλό επίπεδο).
    - Χρησιμοποιήσει φίλτρα στους ήρωες του party, δίνοντας στην είσοδο την συμβολοσειρά "use", οπότε καλείται η ομώνυμη συνάρτηση της party.
      Σε αυτήν ανοίγει μενού όπου μπορεί να:
          - Επιλέξει ποιος ήρωας θα χρησιμοποιήσει φίλτρο, δίνοντας το index του (1 - heroNum), μετά να επιλέξει από ένα μενού των διαθεσίμων φίλτρων
            δίνοντας το κατάλληλο index, και η χρήση θα γίνει αν είναι αυτό δυνατόν (αν έχει ο ήρωας αρκετά ψηλό επίπεδο).
    - Αγοράσει αντικείμενα στην αγορά, δίνοντας στην είσοδο τις συμβολοσειρά "buy", οπότε καλείται η ομώνυμη συνάρτηση της gameMarket, με όρισμα το
      party, εφόσον το party βρίσκεται σε τετράγωνο είδους market.
      Σε αυτήν ανοίγει μενού όπου μπορεί να:
          - Επιλέξει τι θα αγοράσει, δίνοντας "weapon", "armor", "potion" ή "spell", μετά να επιλέξει από ένα μενού των διαθέσιμων αντικειμένων αυτού
            του είδους δίνοντας το κατάλληλο index, οπότε καλείται η buy του party με όρισμα αυτό το αντικείμενο (γίνεται αυτόματα). Μετά δίνει
            "y" ή "n", και η διαδικασία επαναλαμβάνεται ή λήγει αντίστοιχα.
    - Πουλήσει αντικείμενα στην αγορά, δίνοντας στην είσοδο την συμβολοσειρά "sell" αντίστοιχα, οπότε καλείται η ομώνυμη συνάρτηση της gameMarket, με
      όρισμα το party, εφόσον το party βρίσκεται σε τετράγωνο είδους market. Αυτή καλεί την ομώνυμη συνάρτηση του party.
      Σε αυτήν ανοίγει μενού όπου μπορεί να:
          - Επιλέξει τι θα πουλήσει, δίνοντας "weapon", "armor", "potion" ή "spell", μετά να επιλέξει από ένα μενού των διαθέσιμων αντικειμένων αυτού
            του είδους δίνοντας το κατάλληλο index, οπότε γίνεται η πώληση. Μετά δίνει "y" ή "n", και η διαδικασία επαναλαμβάνεται ή λήγει αντίστοιχα.
    - Κινήσει το party, δίνοντας στην είσοδο την συμβολοσειρά "move", οπότε μπορεί να επιλέξει κατεύθυνση δίνοντας στην είσοδο μια από τις εξής
      συμβολοσειρές:
          "up"
          "down"
          "left"
          "right"
      (ή μπορεί κατευθείαν να γράψει π.χ. "move right")
      Αν το καινούργιο τετράγωνο μετά την κίνηση θα είναι nonAccessible, η κίνηση αποτυγχάνει. Αν είναι common, υπάρχει μια πιθανότητα να καλεστεί η battle
      της party.
      Σε αυτήν δημιουργούνται κάποια τέρατα και γίνεται μια επαναληπτική διαδικασία (γύροι) μέχρι να λιποθυμήσουν όλοι οι ήρωες ή όλα τα τέρατα, όπου
      κάθε φορά μπορεί να:
          - Επιλέξει αν θα τυπωθούν τα στοιχεία των ηρώων και των τεράτων, δίνοντας "y" ή "n" και για κάθε "ξύπνιο" ήρωα να:
          - Επιτεθεί σε ένα τέρας, δίνοντας "attack", οπότε:
              - Επιλέγει το τέρας, δίνοντας το κατάλληλο index, οπότε γίνεται η επίθεση, και τελειώνει η σειρά αυτού του ήρωα.
          - Εκτελέσει ξόρκι σε ένα τέρας, δίνοντας "castSpell", οπότε:
              - Επιλέγει το ξόρκι, δίνοντας το κατάλληλο index, μετά το τέρας, δίνοντας πάλι το κατάλληλο index, οπότε γίνεται η μαγική επίθεση, και
                τελειώνει η σειρά αυτού του ήρωα αν γίνει επιτυχώς.
          - Αλλάξει όπλο ή πανοπλία, δίνοντας "equip", οπότε καλείται η ομώνυμη συνάρτηση της party, περνώντας όμως τον κατάλληλο ήρωα ως όρισμα, και
            τελειώνει η σειρά αυτού του ήρωα αν γίνει επιτυχώς.
          - Χρησιμοποιήσει φίλτρο, δίνοντας "use", οπότε καλείται η ομώνυμη συνάρτηση της party, περνώντας όμως τον κατάλληλο ήρωα ως όρισμα, και
            τελειώνει η σειρά αυτού του ήρωα αν γίνει επιτυχώς.
Μπορεί επίσης να εγκαταλείψει τα μενού στα περισσότερα σημεία τους χωρίς να εκτελέσει την αντίστοιχη πράξη, δίνοντας στην είσοδο την συμβολοσειρά "back".